Как же это работает?

А вот как: создаются три правила в iptables на роутере

Пусть наш роутер имеет два адреса: 192.168.1.1 и 192.168.2.1
Socks5-сервер имеет адрес 192.168.2.4
Тогда правила для клиентов будут такие:

iptables -t raw -A PREROUTING -s xxx.xxx.xxx.xxx -p udp -j NFQUEUE --queue-num xx
iptables -t raw -A PREROUTING -s 192.168.2.4 -d 192.168.2.1 -p udp -j NFQUEUE --queue-num xx
iptables -t mangle -A POSTROUTING -s xxx.xxx.xxx.xxx -d 192.168.2.4 -p udp -j NFQUEUE --queue-num xx

В результате все udp пакеты с указанных машин, удовлетворяющих маске адреса xxx.xxx.xxx.xxx будут пересылаться через SOCKS5-сервер по адресу назначения.

Естественно, таблица raw должна быть активизирована в настройках ядра... В других таблицах почему-то не работает.

Запускается соксификатор следующей командой:

udps-static -q xx. Если необходимо запустить в режиме демона, но добавляется опция -D.

Файл udps.conf размещается в каталоге /opt/udps/


Пример кода для проверки живо ли еще соединение. В случае обрыва вернет 0.0.0.0
AnsiString MySocket::GetClientIP(void)const
{
  int addrLen = sizeof(sockaddr);
  struct sockaddr_in CliAddr;
  getsockname
             (
             S,
             (LPSOCKADDR)&CliAddr,
             &addrLen
             );
  AnsiString CliIP = (AnsiString)inet_ntoa(CliAddr.sin_addr);
  return CliIP;
}


requires:
kernel >= 2.6.14
iptables >= 1.3.4
libnetfilter_queue >= 0.0.10
libconfig >= ?